#   Generate continuous integration test files
#
#   This is a code generator built using the iMatix GSL code generation
#   language. See https://github.com/imatix/gsl for details.
#
#   Copyright (c) the Contributors as noted in the AUTHORS file.
#   This file is part of zproject.
#
#   This Source Code Form is subject to the terms of the Mozilla Public
#   License, v. 2.0. If a copy of the MPL was not distributed with this
#   file, You can obtain one at http://mozilla.org/MPL/2.0/.

register_target ("travis", "Travis CI scripts")

.macro target_travis
.if !file.exists (".travis.yml")
.   echo "Generating skeleton .travis.yml script"
.   output ".travis.yml"
# Travis CI script
language: c

os:
- linux

sudo: false

env:
- BUILD_TYPE=default
#- BUILD_TYPE=android
#- BUILD_TYPE=check-py
#- BUILD_TYPE=cmake

addons:
  apt:
    packages:
    - valgrind

before_install:
- if [ $TRAVIS_OS_NAME == "osx" ] ; then brew update; brew install binutils valgrind ; fi

# Hand off to generated script for each BUILD_TYPE
script: ./ci_build.sh
.endif
.
.output "ci_build.sh"
#!/usr/bin/env bash

$(project.GENERATED_WARNING_HEADER)

set -x

if [ "$BUILD_TYPE" == "default" ]; then
    mkdir tmp
    BUILD_PREFIX=$PWD/tmp

    CONFIG_OPTS=()
    CONFIG_OPTS+=("CFLAGS=-I${BUILD_PREFIX}/include")
    CONFIG_OPTS+=("CPPFLAGS=-I${BUILD_PREFIX}/include")
    CONFIG_OPTS+=("CXXFLAGS=-I${BUILD_PREFIX}/include")
    CONFIG_OPTS+=("LDFLAGS=-L${BUILD_PREFIX}/lib")
    CONFIG_OPTS+=("PKG_CONFIG_PATH=${BUILD_PREFIX}/lib/pkgconfig")
    CONFIG_OPTS+=("--prefix=${BUILD_PREFIX}")

    # Clone and build dependencies
.   for use where defined (use.repository)
    git clone --depth 1 $(use.repository) $(use.project)
    git --no-pager log -oneline -n1
    ( cd $(use.project) && ./autogen.sh && ./configure "${CONFIG_OPTS[@]}" && make -j4 && make install ) || exit 1

.   endfor
    # Build and check this project
    ( ./autogen.sh && ./configure "${CONFIG_OPTS[@]}" && make -j4 && make check && make memcheck && make install ) || exit 1
else
    pushd "./builds/${BUILD_TYPE}" && REPO_DIR="\$(dirs -l +1)" ./ci_build.sh
fi
.close
.chmod_x ("ci_build.sh")
.directory.create ('builds/check_zproject')
.output "builds/check_zproject/ci_build.sh"
#!/usr/bin/env bash
set -e

docker run -v "$REPO_DIR":/gsl zeromqorg/zproject project.xml

if [[ \$(git --no-pager diff) ]]; then
    git --no-pager diff
    echo "There are diffs between current code and code generated by zproject!"
    exit 1
fi
if [[ \$(git status -s) ]]; then
    git status -l
    echo "zproject generated new files!"
    exit 1
fi
.close
.endmacro
