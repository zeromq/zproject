<!-- 
    The project.xml generates build environments for:

        * android
        * autotool
        * cmake
        * mingw32
        * vs2008
        * vs2010
        * vs2012
        * vs2013

    Classes are automatically added to all build environments. Further as you
    add new classes to your project you can generate skeleton header and source 
    files according to http://rfc.zeromq.org/spec:21.

    name := The name of your project
    description := A short description for your project
    script := The gsl script to generate all the stuff !!! DO NOT CHANGE !!!
    email := The email address where to reach you project e.g. mailinglist.
-->
<project
    name = "zproject"
    description = "a project skeleton generator."
    script = "project.gsl"
    email = "zeromq-dev@lists.zeromq.org"  >

    <!--
        Includes are processed first, so XML in included files will be
        part of the XML tree
    -->
    <include filename = "license.xml" />

    <!-- 
        Current version of your project. 
        This will be used to package your distribution 
    -->
    <version major="1" minor="0" patch="0" />

    <!-- 
        The dependency are added to your project header file.
        *** Currently only dynamically linked libaries are supported ***
    <dependency name="zmq" header="zmq.h" test="zmq_init" />
    <dependency name="czmq" header="czmq.h" test="zctx_test" />
    -->

    <!-- 
        The pkg-config based dependencies are added to _CPPFLAGS and _LDADD
    <package_dependency name="zmq" pkg_name="libzmq" for_all="1" />
    -->

    <!-- Header Files 
         name := The name the header file to include without file ending
         placement := When to include the header file in main project header file
             pre -> Before typedefs of structs and includes of classes headers (default)
             post -> After typedefs of structs and includes of classes headers
    <header name = "myproject_prelude" placement ="pre|post" />
    -->

    <!-- 
        Classes, if the class header or source file doesn't exist this will
                 generate a skeletons for them.
    <class name = "myclass">My classes description</class>
    -->

    <!-- 
        Models that we build using GSL 
        *** Not supported yet ***
    <model name = "sockopts" />
    <model name = "zgossip" />
    <model name = "zgossip_msg" />
    -->

    <!-- Other source files that we need to package
    <extra name = "some_ressource" />
    -->

    <!-- 
        Stuff that needs to be installed:
        
        * Linux -> /usr/local/bin
    -->
    <bin name = "build-android.gsl" />
    <bin name = "build-autoconf.gsl" />
    <bin name = "build-automake.gsl" />
    <bin name = "build-lib.gsl" />
    <bin name = "build-class.gsl" />
    <bin name = "build-cmake.gsl" />
    <bin name = "build-mingw32.gsl" />
    <bin name = "build-vs2008.gsl" />
    <bin name = "build-vs2010.gsl" />
    <bin name = "build-vs2012.gsl" />
    <bin name = "build-vs2013.gsl" />
    <bin name = "project.gsl" />

</project>
